// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TARge20.Data;

namespace TARge20.Data.Migrations
{
    [DbContext(typeof(TARge20DbContext))]
    [Migration("20210620205923_TARge20")]
    partial class TARge20
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TARge20.Core.Domain.ametinimetused", b =>
                {
                    b.Property<string>("ametinimetusId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("kommentaar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nimetus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("tootajaId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ametinimetusId");

                    b.HasIndex("tootajaId");

                    b.ToTable("ametinimetused");
                });

            modelBuilder.Entity("TARge20.Core.Domain.haigusleheTyyp", b =>
                {
                    b.Property<Guid>("haigusleheTyypId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("kommentaar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nimetus")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("haigusleheTyypId");

                    b.ToTable("haigusleheTyyp");
                });

            modelBuilder.Entity("TARge20.Core.Domain.haiguslehed", b =>
                {
                    b.Property<Guid>("haigusleheId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("haigusleheAlgus")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("haigusleheLopp")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("haigusleheTyypId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("kommentaar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("tootajaId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("haigusleheId");

                    b.HasIndex("haigusleheTyypId");

                    b.HasIndex("tootajaId");

                    b.ToTable("haiguslehed");
                });

            modelBuilder.Entity("TARge20.Core.Domain.harukontor", b =>
                {
                    b.Property<Guid>("harukontorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("aadress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("telefoninr")
                        .HasColumnType("int");

                    b.HasKey("harukontorId");

                    b.ToTable("harukontor");
                });

            modelBuilder.Entity("TARge20.Core.Domain.laenutatavEse", b =>
                {
                    b.Property<Guid>("laenutatavEseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("esemeNimi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("kommentaar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("tootajaId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("laenutatavEseId");

                    b.HasIndex("tootajaId");

                    b.ToTable("laenutatavEse");
                });

            modelBuilder.Entity("TARge20.Core.Domain.laenutuskord", b =>
                {
                    b.Property<Guid>("laenutuskordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("laenutatavEseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("laenutuseAlgus")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("laenutuseLopp")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("tootajaId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("laenutuskordId");

                    b.HasIndex("laenutatavEseId");

                    b.HasIndex("tootajaId");

                    b.ToTable("laenutukord");
                });

            modelBuilder.Entity("TARge20.Core.Domain.ligipaasuloaTyyp", b =>
                {
                    b.Property<Guid>("ligipaasuloaTyypId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("kommentaar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ligipaas")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ligipaasuloaTyypId");

                    b.ToTable("ligipaasuloaTyyp");
                });

            modelBuilder.Entity("TARge20.Core.Domain.ligipaasuluba", b =>
                {
                    b.Property<Guid>("ligipaasulubaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ligipaasuloaAlgus")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ligipaasuloaLopp")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ligipaasuloaTyypId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("tootajaId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ligipaasulubaId");

                    b.HasIndex("ligipaasuloaTyypId");

                    b.HasIndex("tootajaId");

                    b.ToTable("ligipaasuluba");
                });

            modelBuilder.Entity("TARge20.Core.Domain.palved", b =>
                {
                    b.Property<string>("palveId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("kommentaar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("kuupaev")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("tootajaId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("palveId");

                    b.HasIndex("tootajaId");

                    b.ToTable("palved");
                });

            modelBuilder.Entity("TARge20.Core.Domain.puhkuseTyyp", b =>
                {
                    b.Property<Guid>("puhkuseTyypId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("kommentaar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nimetus")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("puhkuseTyypId");

                    b.ToTable("puhkuseTyyp");
                });

            modelBuilder.Entity("TARge20.Core.Domain.puhkused", b =>
                {
                    b.Property<Guid>("puhkuseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("kommentaar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("puhkuseAlgus")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("puhkuseLopp")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("puhkuseTyypId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("tootajaId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("puhkuseId");

                    b.HasIndex("puhkuseTyypId");

                    b.HasIndex("tootajaId");

                    b.ToTable("puhkused");
                });

            modelBuilder.Entity("TARge20.Core.Domain.tervisekontrollid", b =>
                {
                    b.Property<Guid>("tervisekontrolliId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("kellaaeg")
                        .HasColumnType("datetime2");

                    b.Property<string>("kommentaar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("kuupäev")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("tootajaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("tulemus")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("tervisekontrolliId");

                    b.HasIndex("tootajaId");

                    b.ToTable("tervisekontrollid");
                });

            modelBuilder.Entity("TARge20.Core.Domain.toosuhe", b =>
                {
                    b.Property<Guid>("toosuheId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ametinimetusedametinimetusId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("koormus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("toolAlates")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("toolKuni")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("tootajaId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("toosuheId");

                    b.HasIndex("ametinimetusedametinimetusId");

                    b.HasIndex("tootajaId");

                    b.ToTable("toosuhe");
                });

            modelBuilder.Entity("TARge20.Core.Domain.tootaja", b =>
                {
                    b.Property<Guid>("tootajaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("eesnimi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("harukontorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("isikukood")
                        .HasColumnType("int");

                    b.Property<string>("kommentaar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("kontaktEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("kontaktaadress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("kontakttelefon")
                        .HasColumnType("int");

                    b.Property<string>("perekonnanimi")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("tootajaId");

                    b.HasIndex("harukontorId");

                    b.ToTable("tootaja");
                });

            modelBuilder.Entity("TARge20.Core.Domain.tootajaLaps", b =>
                {
                    b.Property<Guid>("tootajaLapsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("eesnimi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("isikukood")
                        .HasColumnType("int");

                    b.Property<string>("kommentaar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("kontaktEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("kontaktaadress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("kontakttelefon")
                        .HasColumnType("int");

                    b.Property<string>("perekonnanimi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("tootajaId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("tootajaLapsId");

                    b.HasIndex("tootajaId");

                    b.ToTable("tootajaLaps");
                });

            modelBuilder.Entity("TARge20.Core.Domain.vihjed", b =>
                {
                    b.Property<Guid>("vihjeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("kommentaar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("kuupaev")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("tootajaId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("vihjeId");

                    b.HasIndex("tootajaId");

                    b.ToTable("vihjed");
                });

            modelBuilder.Entity("TARge20.Core.Domain.ametinimetused", b =>
                {
                    b.HasOne("TARge20.Core.Domain.tootaja", null)
                        .WithMany("ametinimetused")
                        .HasForeignKey("tootajaId");
                });

            modelBuilder.Entity("TARge20.Core.Domain.haiguslehed", b =>
                {
                    b.HasOne("TARge20.Core.Domain.haigusleheTyyp", "haigusleheTyyp")
                        .WithMany("haiguslehed")
                        .HasForeignKey("haigusleheTyypId");

                    b.HasOne("TARge20.Core.Domain.tootaja", "tootaja")
                        .WithMany("haiguslehed")
                        .HasForeignKey("tootajaId");

                    b.Navigation("haigusleheTyyp");

                    b.Navigation("tootaja");
                });

            modelBuilder.Entity("TARge20.Core.Domain.laenutatavEse", b =>
                {
                    b.HasOne("TARge20.Core.Domain.tootaja", null)
                        .WithMany("laenutatavEse")
                        .HasForeignKey("tootajaId");
                });

            modelBuilder.Entity("TARge20.Core.Domain.laenutuskord", b =>
                {
                    b.HasOne("TARge20.Core.Domain.laenutatavEse", "laenutatavEse")
                        .WithMany()
                        .HasForeignKey("laenutatavEseId");

                    b.HasOne("TARge20.Core.Domain.tootaja", "tootaja")
                        .WithMany("laenutuskord")
                        .HasForeignKey("tootajaId");

                    b.Navigation("laenutatavEse");

                    b.Navigation("tootaja");
                });

            modelBuilder.Entity("TARge20.Core.Domain.ligipaasuluba", b =>
                {
                    b.HasOne("TARge20.Core.Domain.ligipaasuloaTyyp", "ligipaasuloaTyyp")
                        .WithMany()
                        .HasForeignKey("ligipaasuloaTyypId");

                    b.HasOne("TARge20.Core.Domain.tootaja", "tootaja")
                        .WithMany("ligipaasuluba")
                        .HasForeignKey("tootajaId");

                    b.Navigation("ligipaasuloaTyyp");

                    b.Navigation("tootaja");
                });

            modelBuilder.Entity("TARge20.Core.Domain.palved", b =>
                {
                    b.HasOne("TARge20.Core.Domain.tootaja", "tootaja")
                        .WithMany("palved")
                        .HasForeignKey("tootajaId");

                    b.Navigation("tootaja");
                });

            modelBuilder.Entity("TARge20.Core.Domain.puhkused", b =>
                {
                    b.HasOne("TARge20.Core.Domain.puhkuseTyyp", "puhkuseTyyp")
                        .WithMany()
                        .HasForeignKey("puhkuseTyypId");

                    b.HasOne("TARge20.Core.Domain.tootaja", "tootaja")
                        .WithMany("puhkused")
                        .HasForeignKey("tootajaId");

                    b.Navigation("puhkuseTyyp");

                    b.Navigation("tootaja");
                });

            modelBuilder.Entity("TARge20.Core.Domain.tervisekontrollid", b =>
                {
                    b.HasOne("TARge20.Core.Domain.tootaja", "tootaja")
                        .WithMany("tervisekontrollid")
                        .HasForeignKey("tootajaId");

                    b.Navigation("tootaja");
                });

            modelBuilder.Entity("TARge20.Core.Domain.toosuhe", b =>
                {
                    b.HasOne("TARge20.Core.Domain.ametinimetused", "ametinimetused")
                        .WithMany()
                        .HasForeignKey("ametinimetusedametinimetusId");

                    b.HasOne("TARge20.Core.Domain.tootaja", "tootaja")
                        .WithMany("toosuhe")
                        .HasForeignKey("tootajaId");

                    b.Navigation("ametinimetused");

                    b.Navigation("tootaja");
                });

            modelBuilder.Entity("TARge20.Core.Domain.tootaja", b =>
                {
                    b.HasOne("TARge20.Core.Domain.harukontor", "harukontor")
                        .WithMany("tootajas")
                        .HasForeignKey("harukontorId");

                    b.Navigation("harukontor");
                });

            modelBuilder.Entity("TARge20.Core.Domain.tootajaLaps", b =>
                {
                    b.HasOne("TARge20.Core.Domain.tootaja", "tootaja")
                        .WithMany("tootajaLaps")
                        .HasForeignKey("tootajaId");

                    b.Navigation("tootaja");
                });

            modelBuilder.Entity("TARge20.Core.Domain.vihjed", b =>
                {
                    b.HasOne("TARge20.Core.Domain.tootaja", "tootaja")
                        .WithMany("vihjed")
                        .HasForeignKey("tootajaId");

                    b.Navigation("tootaja");
                });

            modelBuilder.Entity("TARge20.Core.Domain.haigusleheTyyp", b =>
                {
                    b.Navigation("haiguslehed");
                });

            modelBuilder.Entity("TARge20.Core.Domain.harukontor", b =>
                {
                    b.Navigation("tootajas");
                });

            modelBuilder.Entity("TARge20.Core.Domain.tootaja", b =>
                {
                    b.Navigation("ametinimetused");

                    b.Navigation("haiguslehed");

                    b.Navigation("laenutatavEse");

                    b.Navigation("laenutuskord");

                    b.Navigation("ligipaasuluba");

                    b.Navigation("palved");

                    b.Navigation("puhkused");

                    b.Navigation("tervisekontrollid");

                    b.Navigation("toosuhe");

                    b.Navigation("tootajaLaps");

                    b.Navigation("vihjed");
                });
#pragma warning restore 612, 618
        }
    }
}
